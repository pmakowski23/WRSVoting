import type { NextPage } from "next";
import Head from "next/head";

import { Button, Center, Text } from "@mantine/core";

import { supabaseClient } from "@supabase/supabase-auth-helpers/nextjs";
import { useUser } from "@supabase/supabase-auth-helpers/react";

import { Voting } from "../components/Voting";
import { Vote } from "../@types/Vote";
import { useEffect, useState } from "react";

const Home: NextPage = () => {
  const { user } = useUser();
  const [hasAlreadyVoted, setHasAlreadyVoted] = useState(false);

  const handleLogin = async () => {
    await supabaseClient.auth.signIn({
      provider: "google",
    });
  };

  const handleVote = async ({ voted_for, voted_by }: Vote) => {
    return await supabaseClient.from("votes").insert([{ voted_for, voted_by }]);
  };

  useEffect(() => {
    if (user) {
      checkIfhasAlreadyVoted();
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [user]);

  const checkIfhasAlreadyVoted = async () => {
    setHasAlreadyVoted(
      (await supabaseClient.from("votes").select("voted_by")).body?.some(
        ({ voted_by }) => voted_by === user?.id
      ) || false
    );
  };

  return (
    <Center
      sx={(theme) => ({
        height: "100vh",
        width: "100vw",
        flexDirection: "column",
        gap: theme.spacing.md,
      })}
    >
      <Head>
        <title>WRS Voting</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Center component="main" sx={{ flexDirection: "column" }}>
        <Text size="xl" weight={500}>
          Welcome to WRS voting app
        </Text>
        {!user ? (
          <Button onClick={handleLogin}>Login via Google</Button>
        ) : (
          <>
            {!user.email?.includes("samorzad.p.lodz.pl") ? (
              <>
                <Text>You need to use WRS account</Text>
                <Button onClick={() => supabaseClient.auth.signOut()}>
                  Log out
                </Button>
              </>
            ) : (
              <>
                <Text>Logged in as {user.user_metadata.full_name}</Text>
                {hasAlreadyVoted ? (
                  <Text>You have already voted</Text>
                ) : (
                  <Voting
                    candidateNames={[
                      "Grzegorz Kempa",
                      "Jakub Stępnicki",
                      "Piotr Kiełek",
                    ]}
                    onSubmit={handleVote}
                  />
                )}
              </>
            )}
          </>
        )}
      </Center>

      <Center>
        <Text>
          Created by{" "}
          <a
            href="https://github.com/pmakowski23"
            target="_blank"
            rel="noopener noreferrer"
          >
            Patryk Makowski
          </a>
        </Text>
      </Center>
    </Center>
  );
};

export default Home;
